# Copyright (c) 2016-2020 Knuth Project developers.
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.


branches:
  only:
  - master
  # - /^v\d+\.\d+\.\d+$/
  - dev
  - /^release-\d+\.\d+\.\d+$/
  - /^release_\d+\.\d+\.\d+$/
  - /^hotfix-\d+\.\d+\.\d+$/
  - /^hotfix_\d+\.\d+\.\d+$/
  - /^feature-ci-.+$/
  - /^feature_ci_.+$/
  - /^feature-travis-.+$/
  - /^feature_travis_.+$/

env:
   global:
     - CONAN_STABLE_BRANCH_PATTERN: "master$" #"release/*"

linux: &linux
   os: linux
   sudo: required
   language: python
   python: "3.7"
   services:
     - docker

osx: &osx
   os: osx
   language: generic

before_install:
  - |
    if [[ "${TRAVIS_COMMIT_MESSAGE}" = *"[skip travis]"* ]]; then
      echo "[skip travis] detected in commit message, exiting"
      travis_terminate 0
    fi

install:
  - cd ${TRAVIS_BUILD_DIR}

  - |
    if [[ "${CHECK_FORMATTING}" != "true" ]]; then
      chmod +x ci_utils/.travis/install.sh
      ./ci_utils/.travis/install.sh
    fi    

script:
  - git fetch --unshallow
  - git fetch origin master:master

  # #TODO(fernando): Use conanio/clang50 for checking formating and other clang-tools related
  # - |
  #   if [[ "${CHECK_FORMATTING}" == "true" ]]; then
  #     cd ${TRAVIS_BUILD_DIR}
  #     chmod a+x .travis/check_format.sh
  #     /usr/bin/docker run --rm -ti -v ${TRAVIS_BUILD_DIR}:/home/conan/project \
  #                                  -v ${TRAVIS_BUILD_DIR}/.travis/check_format.sh:/tmp/check_format.sh conanio/clang40 \
  #                                  /bin/bash \
  #                                  -c /tmp/check_format.sh

  #   fi

  - |
    if [[ "${CHECK_FORMATTING}" != "true" ]]; then
      cd ${TRAVIS_BUILD_DIR}
      chmod +x ci_utils/.travis/run.sh
      ./ci_utils/.travis/run.sh
    fi

jobs:
  include:
# Wait for dependencies ----------------------------------------------
    - stage: wait for dependencies
      os: linux
      sudo: required
      language: python
      python: "3.7"
      services:
        - docker
      env: CONAN_GCC_VERSIONS=8 CONAN_DOCKER_IMAGE=conanio/gcc8
           KTH_CI_CURRENCY=BCH
      if: branch =~ /^(release|hotfix).+$/    #Just releases
      script:
        - |
          conan user
          conan remote add kth_temp https://api.bintray.com/conan/k-nuth/kth
          echo "waiting for bitprim-rpc/0.X@kth/staging ..."
          conan search bitprim-rpc/0.X@kth/staging -r kth_temp > /dev/null
          while [ $? == 1 ]
          do
            printf "."
            sleep 10
            conan search bitprim-rpc/0.X@kth/staging -r kth_temp > /dev/null
          done
          echo "bitprim-rpc/0.X@kth/staging found"

# Static Checks ------------------------------------------------------
    - stage: static checks
      os: linux
      sudo: required
      language: python
      python: "3.7"
      services:
        - docker
      env: CONAN_CLANG_VERSIONS=6.0 CONAN_DOCKER_IMAGE=conanio/clang60
      # if: branch =~ /^(release|hotfix).+$/
      if: branch =~ /^(release|hotfix|dev|feature).*$/    #Avoid master
      install: skip
      script: echo "Running checks (1)"
        # - cd ${TRAVIS_BUILD_DIR}
        # - chmod a+x .travis/check_format.sh
        # - /usr/bin/docker run --rm -ti -v ${TRAVIS_BUILD_DIR}:/home/conan/project \
        #                             -v ${TRAVIS_BUILD_DIR}/.travis/check_format.sh:/tmp/check_format.sh conanio/clang60 \
        #                             /bin/bash \
        #                             -c /tmp/check_format.sh

# Builds ------------------------------------------------------
    # Linux, GCC, libstdc++ ------------------------------------------------------
    # - stage: build and upload binaries
    #   os: linux
    #   sudo: required
    #   language: python
    #   python: "3.7"
    #   services:
    #     - docker
    #   env: CONAN_GCC_VERSIONS=8 CONAN_DOCKER_IMAGE=conanio/gcc8
    #        KTH_CI_CURRENCY=BCH
    #   if: branch =~ /^(release|hotfix).+$/    #Just releases
    # - stage: build and upload binaries
    #   os: linux
    #   sudo: required
    #   language: python
    #   python: "3.7"
    #   services:
    #     - docker
    #   env: CONAN_GCC_VERSIONS=8 CONAN_DOCKER_IMAGE=conanio/gcc8
    #        KTH_CI_CURRENCY=BTC
    #   if: branch =~ /^(release|hotfix).+$/    #Just releases

    - stage: build and upload binaries
      os: linux
      sudo: required
      language: python
      python: "3.7"
      services:
        - docker
      env: CONAN_GCC_VERSIONS=7 CONAN_DOCKER_IMAGE=conanio/gcc7
           KTH_CI_CURRENCY=BCH
      if: branch =~ /^(dev|feature).*$/         #Just development branches
    - stage: build and upload binaries
      os: linux
      sudo: required
      language: python
      python: "3.7"
      services:
        - docker
      env: CONAN_GCC_VERSIONS=7 CONAN_DOCKER_IMAGE=conanio/gcc7
           KTH_CI_CURRENCY=BTC
      if: branch =~ /^(dev|feature).*$/        #Just development branches

    # - stage: build and upload binaries
    #   os: linux
    #   sudo: required
    #   language: python
    #   python: "3.7"
    #   services:
    #     - docker
    #   env: CONAN_GCC_VERSIONS=6 CONAN_DOCKER_IMAGE=conanio/gcc6
    #        KTH_CI_CURRENCY=BCH
    #   if: branch =~ /^(release|hotfix).+$/    #Just releases
    # - stage: build and upload binaries
    #   os: linux
    #   sudo: required
    #   language: python
    #   python: "3.7"
    #   services:
    #     - docker
    #   env: CONAN_GCC_VERSIONS=6 CONAN_DOCKER_IMAGE=conanio/gcc6
    #        KTH_CI_CURRENCY=BTC
    #   if: branch =~ /^(release|hotfix).+$/    #Just releases

    - stage: build and upload binaries
      os: linux
      sudo: required
      language: python
      python: "3.7"
      services:
        - docker
      env: CONAN_GCC_VERSIONS=5 CONAN_DOCKER_IMAGE=conanio/gcc5
           KTH_CI_CURRENCY=BCH
      if: branch =~ /^(release|hotfix).+$/    #Just releases
    - stage: build and upload binaries
      os: linux
      sudo: required
      language: python
      python: "3.7"
      services:
        - docker
      env: CONAN_GCC_VERSIONS=5 CONAN_DOCKER_IMAGE=conanio/gcc5
           KTH_CI_CURRENCY=BTC
      if: branch =~ /^(release|hotfix).+$/    #Just releases

    # - stage: build and upload binaries
    #   os: linux
    #   sudo: required
    #   language: python
    #   python: "3.7"
    #   services:
    #     - docker
    #   env: CONAN_GCC_VERSIONS=4.9 CONAN_DOCKER_IMAGE=conanio/gcc49
    #   if: branch =~ /^(release|hotfix).+$/    #Just releases


    # Linux, Clang, libstdc++ ----------------------------------------------------
    # - stage: build and upload binaries
    #   os: linux
    #   sudo: required
    #   language: python
    #   python: "3.7"
    #   services:
    #     - docker
    #   env: CONAN_CLANG_VERSIONS=6.0 CONAN_DOCKER_IMAGE=conanio/clang60
    #        KTH_CI_CURRENCY=BCH
    #   if: branch =~ /^(release|hotfix|dev|feature).*$/    #Avoid master
    # - stage: build and upload binaries
    #   os: linux
    #   sudo: required
    #   language: python
    #   python: "3.7"
    #   services:
    #     - docker
    #   env: CONAN_CLANG_VERSIONS=6.0 CONAN_DOCKER_IMAGE=conanio/clang60
    #        KTH_CI_CURRENCY=BTC
    #   if: branch =~ /^(release|hotfix|dev|feature).*$/    #Avoid master

    # - stage: build and upload binaries
    #   os: linux
    #   sudo: required
    #   language: python
    #   python: "3.7"
    #   services:
    #     - docker
    #   env: CONAN_CLANG_VERSIONS=5.0 CONAN_DOCKER_IMAGE=conanio/clang50
    #        KTH_CI_CURRENCY=BCH
    #   if: branch =~ /^(release|hotfix).+$/    #Just releases
    # - stage: build and upload binaries
    #   os: linux
    #   sudo: required
    #   language: python
    #   python: "3.7"
    #   services:
    #     - docker
    #   env: CONAN_CLANG_VERSIONS=5.0 CONAN_DOCKER_IMAGE=conanio/clang50
    #        KTH_CI_CURRENCY=BTC
    #   if: branch =~ /^(release|hotfix).+$/    #Just releases

    # - stage: build and upload binaries
    #   os: linux
    #   sudo: required
    #   language: python
    #   python: "3.7"
    #   services:
    #     - docker
    #   env: CONAN_CLANG_VERSIONS=4.0 CONAN_DOCKER_IMAGE=conanio/clang40
    #        KTH_CI_CURRENCY=BCH
    #   if: branch =~ /^(release|hotfix).+$/    #Just releases
    # - stage: build and upload binaries
    #   os: linux
    #   sudo: required
    #   language: python
    #   python: "3.7"
    #   services:
    #     - docker
    #   env: CONAN_CLANG_VERSIONS=4.0 CONAN_DOCKER_IMAGE=conanio/clang40
    #        KTH_CI_CURRENCY=BTC
    #   if: branch =~ /^(release|hotfix).+$/    #Just releases

    # - stage: build and upload binaries
    #   os: linux
    #   sudo: required
    #   language: python
    #   python: "3.7"
    #   services:
    #     - docker
    #   env: CONAN_CLANG_VERSIONS=3.9 CONAN_DOCKER_IMAGE=conanio/clang39

    # macOS, apple-Clang, libc++ -------------------------------------------------
    - stage: build and upload binaries
      os: osx
      language: generic
      osx_image: xcode10.1
      env: CONAN_APPLE_CLANG_VERSIONS=10.0
           KTH_CI_CURRENCY=BCH
      if: branch =~ /^(release|hotfix|dev|feature).*$/    #Avoid master
    - stage: build and upload binaries
      os: osx
      language: generic
      osx_image: xcode10.1
      env: CONAN_APPLE_CLANG_VERSIONS=10.0
           KTH_CI_CURRENCY=BTC
      if: branch =~ /^(release|hotfix|dev|feature).*$/    #Avoid master

    # - stage: build and upload binaries
    #   os: osx
    #   language: generic
    #   osx_image: xcode9     
    #   env: CONAN_APPLE_CLANG_VERSIONS=9.0
    #        KTH_CI_CURRENCY=BCH
    #   if: branch =~ /^(release|hotfix).+$/    #Just releases
    # - stage: build and upload binaries
    #   os: osx
    #   language: generic
    #   osx_image: xcode9
    #   env: CONAN_APPLE_CLANG_VERSIONS=9.0
    #        KTH_CI_CURRENCY=BTC
    #   if: branch =~ /^(release|hotfix).+$/    #Just releases

    # - stage: build and upload binaries
    #   os: osx
    #   language: generic
    #   osx_image: xcode8.3         
    #   env: CONAN_APPLE_CLANG_VERSIONS=8.1
    #        KTH_CI_CURRENCY=BCH
    #   if: branch =~ /^(release|hotfix).+$/    #Just releases
    # - stage: build and upload binaries
    #   os: osx
    #   language: generic
    #   osx_image: xcode8.3         
    #   env: CONAN_APPLE_CLANG_VERSIONS=8.1
    #        KTH_CI_CURRENCY=BTC
    #   if: branch =~ /^(release|hotfix).+$/    #Just releases

    # - stage: build and upload binaries
    #   os: osx
    #   language: generic
    #   osx_image: xcode7.3
    #   env: CONAN_APPLE_CLANG_VERSIONS=7.3
    #        KTH_CI_CURRENCY=BCH
    #   if: branch =~ /^(release|hotfix).+$/    #Just releases
    # - stage: build and upload binaries
    #   os: osx
    #   language: generic
    #   osx_image: xcode7.3
    #   env: CONAN_APPLE_CLANG_VERSIONS=7.3
    #        KTH_CI_CURRENCY=BTC
    #   if: branch =~ /^(release|hotfix).+$/    #Just releases

# Upload Aliases -----------------------------------------------------
    - stage: upload aliases
      os: linux
      sudo: required
      language: python
      python: "3.7"
      # install: skip
      if: branch =~ /^(release|hotfix|dev|feature).*$/    #Avoid master
      script:
        - |
          cd ${TRAVIS_BUILD_DIR}
          git fetch --unshallow
          git fetch origin master:master
          REPO_NAME=$(echo $TRAVIS_REPO_SLUG| cut -d'/' -f 2)
          echo $REPO_NAME

        - eval $(python ci_utils/set_envvars_and_files.py)
        #TODO(fernando): configure the remote and user using environment variables
        - conan remote add kth_temp https://api.bintray.com/conan/k-nuth/kth
        - conan user
        - conan user ${CONAN_LOGIN_USERNAME} -r kth_temp -p ${CONAN_PASSWORD}
        - conan user
        - conan alias "${REPO_NAME}/0.X@kth/${KTH_CONAN_CHANNEL}" "${REPO_NAME}/${KTH_CONAN_VERSION}@kth/${KTH_CONAN_CHANNEL}"
        - conan upload "${REPO_NAME}/0.X@kth/${KTH_CONAN_CHANNEL}" --all -r kth_temp

# # Push to repos ------------------------------------------------------
#     - stage: push to repos
#       install: skip
#       script:
#           - chmod +x .travis/push_other_repo.sh
#           - ./.travis/push_other_repo.sh
#       if: branch =~ /^(dev|feature).*$/     feature_ci_adjustments

# Dummy for master ------------------------------------------------------
    - stage: build and upload binaries
      install: 
        - echo "Stable packages are published in Release branches"
      script:
        - echo "Stable packages are published in Release branches"
      if: branch =~ /^master$/


# # Integration Tests ------------------------------------------------------
#     - stage: integration tests
#       install: skip
#       script: echo "Running integration tests (Guille)"


    # - stage: deploy to staging
    #   install: skip
    #   script: skip
    # - stage: test staging
    #   install: skip
    #   script: 'curl http://sf-stages-staging.herokuapp.com'
    # - stage: deploy to production
    #   install: skip
    #   script: skip
    # - stage: test production
    #   install: skip
    #   script: 'curl http://sf-stages-production.herokuapp.com'

notifications:
  email: false
  webhooks:
    urls: https://webhooks.gitter.im/e/a19dd2b03bf676d2b622
    on_success: change
    on_failure: always

# matrix:
#    include:
#       - <<: *linux
#         env: CONAN_GCC_VERSIONS=4.9 
#              CONAN_DOCKER_IMAGE=conanio/gcc49
#              KTH_CI_CURRENCY=BCH

#       - <<: *linux
#         env: CONAN_GCC_VERSIONS=4.9 
#              CONAN_DOCKER_IMAGE=conanio/gcc49
#              KTH_CI_CURRENCY=BTC

#       - <<: *osx
#         osx_image: xcode7.3
#         env: CONAN_APPLE_CLANG_VERSIONS=7.3
#              KTH_CI_CURRENCY=BCH

#       - <<: *osx
#         osx_image: xcode7.3
#         env: CONAN_APPLE_CLANG_VERSIONS=7.3
#              KTH_CI_CURRENCY=BTC

# script:

#   - |
#     if [[ $TRAVIS_COMMIT_MESSAGE != *"[NO_TRAVIS]"* ]]; then

#       git fetch --unshallow || true
#       export KTH_BUILD_NUMBER="$(git describe)"
#       echo "${KTH_BUILD_NUMBER}"

#       cd ${TRAVIS_BUILD_DIR}

#       python ./.travis/update_version.py console/version.hpp "#define KTH_NODE_EXE_VERSION " "#define KTH_NODE_EXE_VERSION \"$KTH_BUILD_NUMBER\""
#       cat console/version.hpp
#     fi
